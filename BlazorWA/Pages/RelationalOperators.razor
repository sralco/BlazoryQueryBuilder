@using System.Linq.Expressions
<div class="form-group">
    <select class="form-control" id="operatorList" @onchange="ChangeOperator">
        @foreach (var item in Operators)
        {
            <option value="@item.Key" 
                    selected="@ExpressionType.ToString().Equals(item.Key)">@item.Value</option>

        }
    </select>
</div>

@functions {

    ExpressionType _selectedOperator = ExpressionType.Equal;

    Dictionary<string, string> Operators = new Dictionary<string, string>
    {
        {"Equal", "Equals"},
        {"NotEqual", "Does not equal"},
        {"LessThan", "Less than"},
        {"GreaterThan", "Greater than"},
        {"InList", "In List"},
        {"NotInList", "Not In List"},
    };

    [Parameter]
    public Action<ExpressionType> OnChange { get; set; }

    [Parameter]
    public ExpressionType ExpressionType { get; set; }

    private void ChangeOperator(ChangeEventArgs args)
    {
                Console.WriteLine("changed");

        var expressionType = (ExpressionType) Enum.Parse(typeof(ExpressionType), args.Value.ToString());
        Console.WriteLine(expressionType);
        ExpressionType = expressionType;
        OnChange.Invoke(expressionType);
    }
}